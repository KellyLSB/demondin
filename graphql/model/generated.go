// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/google/uuid"
	"github.com/jinzhu/gorm/dialects/postgres"
)

type Postgresql interface {
	IsPostgresql()
}

type ItemOption struct {
	ID            uuid.UUID      `json:"id" gorm:"type:uuid;primary_key;default:uuid_generate_v4()"`
	CreatedAt     time.Time      `json:"createdAt"`
	UpdatedAt     time.Time      `json:"updatedAt"`
	DeletedAt     *time.Time     `json:"deletedAt"`
	InvoiceItemID uuid.UUID      `json:"invoiceItemID" gorm:"type:uuid"`
	OptionType    ItemOptionType `json:"optionType"`
	Values        string         `json:"values"`
}

func (ItemOption) IsPostgresql() {}

type ItemOptionType struct {
	ID        uuid.UUID       `json:"id" gorm:"type:uuid;primary_key;default:uuid_generate_v4()"`
	CreatedAt time.Time       `json:"createdAt"`
	UpdatedAt time.Time       `json:"updatedAt"`
	DeletedAt *time.Time      `json:"deletedAt"`
	ItemID    uuid.UUID       `json:"itemID" gorm:"type:uuid"`
	Key       string          `json:"key"`
	ValueType string          `json:"valueType"`
	Values    *postgres.Jsonb `json:"values"`
}

func (ItemOptionType) IsPostgresql() {}

type ItemPrice struct {
	ID         uuid.UUID  `json:"id" gorm:"type:uuid;primary_key;default:uuid_generate_v4()"`
	CreatedAt  time.Time  `json:"createdAt"`
	UpdatedAt  time.Time  `json:"updatedAt"`
	DeletedAt  *time.Time `json:"deletedAt"`
	ItemID     uuid.UUID  `json:"itemID" gorm:"type:uuid"`
	Price      int        `json:"price"`
	BeforeDate time.Time  `json:"beforeDate"`
	AfterDate  time.Time  `json:"afterDate"`
	Taxable    *bool      `json:"taxable"`
}

func (ItemPrice) IsPostgresql() {}

type NewInvoice struct {
	ID     *uuid.UUID       `json:"id"`
	Submit *bool            `json:"submit"`
	Items  []NewInvoiceItem `json:"items"`
}

type NewInvoiceItem struct {
	ID          *uuid.UUID      `json:"id"`
	ItemID      uuid.UUID       `json:"itemID"`
	ItemPriceID uuid.UUID       `json:"itemPriceID"`
	Options     []NewItemOption `json:"options"`
}

type NewItem struct {
	ID          *uuid.UUID          `json:"id"`
	Name        string              `json:"name"`
	Description *string             `json:"description"`
	Prices      []NewItemPrice      `json:"prices"`
	Options     []NewItemOptionType `json:"options"`
}

type NewItemOption struct {
	ID           *uuid.UUID     `json:"id"`
	OptionTypeID uuid.UUID      `json:"optionTypeID"`
	Values       postgres.Jsonb `json:"values"`
}

type NewItemOptionType struct {
	ID        *uuid.UUID     `json:"id"`
	Key       *string        `json:"key"`
	ValueType *string        `json:"valueType"`
	Values    postgres.Jsonb `json:"values"`
}

type NewItemPrice struct {
	ID         *uuid.UUID `json:"id"`
	Price      int        `json:"price"`
	BeforeDate time.Time  `json:"beforeDate"`
	AfterDate  time.Time  `json:"afterDate"`
}

type Paging struct {
	Limit  int `json:"limit"`
	Offset int `json:"offset"`
}
