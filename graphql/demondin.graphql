scalar DateTime
scalar JSON
scalar StripeCard
scalar StripeCharge

interface Postgresql {
  id:             ID!
  createdAt:      DateTime!
  updatedAt:      DateTime!
  deletedAt:      DateTime
}

type Item implements Postgresql {
  id:             ID!
  createdAt:      DateTime!
  updatedAt:      DateTime!
  deletedAt:      DateTime

  name:           String!
  description:    String
  enabled:        Boolean!
  isBadge:        Boolean!
  
  options:        [ItemOptionType!]
  prices:         [ItemPrice!]!
}

type ItemOptionType implements Postgresql {
  id:             ID!
  createdAt:      DateTime!
  updatedAt:      DateTime!
  deletedAt:      DateTime
  
  itemID:         ID!
  key:            String!
  valueType:      String!
  values:         JSON
}

type ItemOption implements Postgresql {
  id:             ID!
  createdAt:      DateTime!
  updatedAt:      DateTime!
  deletedAt:      DateTime

  invoiceItemID:  ID!
  optionType:     ItemOptionType!
  values:         String!
}

type ItemPrice implements Postgresql {
  id:             ID!
  createdAt:      DateTime!
  updatedAt:      DateTime!
  deletedAt:      DateTime
  
  itemID:         ID!
  price:          Int!
  beforeDate:     DateTime!
  afterDate:      DateTime!
  taxable:        Boolean
}

type Invoice implements Postgresql {
  id:             ID!
  createdAt:      DateTime!
  updatedAt:      DateTime!
  deletedAt:      DateTime

  cardToken:      String
  chargeToken:    String
  cardData:       StripeCard
  chargeData:     StripeCharge

  items:          [InvoiceItem!]!
}

type InvoiceItem implements Postgresql {
  id:             ID!
  createdAt:      DateTime!
  updatedAt:      DateTime!
  deletedAt:      DateTime

  invoiceID:      ID!
  itemID:         ID!
  itemPriceID:    ID!
  options:        [ItemOption!]
}

type Query {
  items(paging: Paging = {limit: 0, offset: 0}): [Item!]!
  invoices(paging: Paging = {limit: 0, offst: 0}): [Invoice!]!
}

input NewItem {
  id:             ID
  name:           String!
  description:    String
  prices:         [NewItemPrice!]!
  options:        [NewItemOptionType!]!
}

input NewItemPrice {
  id:             ID
  price:          Int!
  beforeDate:     DateTime!
  afterDate:      DateTime!
}

input NewItemOptionType {
  id:             ID
  key:            String
  valueType:      String
  values:         JSON!
}

input NewInvoice {
  id:             ID
  submit:         Boolean
  items:          [NewInvoiceItem!]!
}

input NewInvoiceItem {
  id:             ID
  itemID:         ID!
  itemPriceID:    ID!
  options:        [NewItemOption!]!
}

input NewItemOption {
  id:             ID
  optionTypeID:   ID!
  values:         JSON!
}

input Paging {
  limit:          Int!
  offset:         Int!
}

type Mutation {
  createItem(input: NewItem!)                               : Item!
  updateItem(id: ID!, input: NewItem!)                      : Item!

  createInvoice(input: NewInvoice!)                         : Invoice!
  updateInvoice(id: ID!, input: NewInvoice!)                : Invoice!
  addItemToInvoice(invoice: ID!, item: ID!, options: JSON!) : Invoice!
}

type Subscription {
  invoiceUpdated(id: ID!) : Invoice!
}
