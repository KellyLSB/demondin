scalar DateTime
scalar JSON
scalar StripeToken
scalar StripeCharge

interface Postgresql {
  id:               ID!
  createdAt:        DateTime!
  updatedAt:        DateTime!
  deletedAt:        DateTime
}

type Item implements Postgresql {
  id:               ID!
  createdAt:        DateTime!
  updatedAt:        DateTime!
  deletedAt:        DateTime

  name:             String!
  description:      String
  enabled:          Boolean!
  isBadge:          Boolean!
  
  options:          [ItemOptionType]
  prices:           [ItemPrice]!
}

type ItemOptionType implements Postgresql {
  id:               ID!
  createdAt:        DateTime!
  updatedAt:        DateTime!
  deletedAt:        DateTime
  
  item:             Item
  itemID:           ID!
  key:              String!
  valueType:        String!
  values:           JSON!
}

type ItemOption implements Postgresql {
  id:               ID!
  createdAt:        DateTime!
  updatedAt:        DateTime!
  deletedAt:        DateTime

  invoiceItem:      InvoiceItem
  invoiceItemID:    ID!
  itemOptionType:   ItemOptionType
  itemOptionTypeID: ID!
  values:           JSON!
}

type ItemPrice implements Postgresql {
  id:               ID!
  createdAt:        DateTime!
  updatedAt:        DateTime!
  deletedAt:        DateTime
  
  item:             Item
  itemID:           ID!
  price:            Int!
  beforeDate:       DateTime!
  afterDate:        DateTime!
  taxable:          Boolean!
}

type Invoice implements Postgresql {
  id:               ID!
  createdAt:        DateTime!
  updatedAt:        DateTime!
  deletedAt:        DateTime

  stripeTokenID:    String
  stripeChargeID:   String
  stripeToken:      StripeToken
  stripeCharge:     StripeCharge

  subTotal:         Int!
  demonDin:         Int!
  taxes:            Int!
  total:            Int!

  items:            [InvoiceItem]!
}

type InvoiceItem implements Postgresql {
  id:               ID!
  createdAt:        DateTime!
  updatedAt:        DateTime!
  deletedAt:        DateTime

  invoice:          Invoice
  invoiceID:        ID!
  item:             Item
  itemID:           ID!
  itemPrice:        ItemPrice
  itemPriceID:      ID!
  options:          [ItemOption]!
}

type Query {
  items(paging: Paging = {limit: 0, offset: 0}): [Item!]!
  invoices(paging: Paging = {limit: 0, offst: 0}): [Invoice!]!
}

input NewItem {
  id:               ID
  name:             String!
  description:      String
  prices:           [NewItemPrice!]!
  options:          [NewItemOptionType!]!
}

input NewItemPrice {
  id:               ID
  price:            Int!
  beforeDate:       DateTime!
  afterDate:        DateTime!
}

input NewItemOptionType {
  id:               ID
  key:              String
  valueType:        String
  values:           JSON!
}

input NewInvoice {
  id:               ID
  stripeTokenID:    String
  submit:           Boolean
  items:            [NewInvoiceItem!]!
}

input NewInvoiceItem {
  id:               ID
  itemID:           ID!
  itemPriceID:      ID!
  options:          [NewItemOption!]!
}

input NewItemOption {
  id:               ID
  itemOptionTypeID: ID!
  values:           JSON!
}

input Paging {
  limit:            Int!
  offset:           Int!
} 

type Mutation {
  createItem(input: NewItem!)                              : Item!
  updateItem(id: ID!, input: NewItem!)                     : Item!

  activeInvoice(input: NewInvoice)                         : Invoice!
  createInvoice(input: NewInvoice!)                        : Invoice!
  updateInvoice(id: ID!, input: NewInvoice!)               : Invoice!
  addItemToInvoice(invoice: ID!, item: ID!, options: JSON) : Invoice!
}

type Subscription {
  invoiceUpdated(id: ID)                                   : Invoice!
}
